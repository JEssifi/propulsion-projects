{"ast":null,"code":"var _jsxFileName = \"/Users/jamilessifi/Desktop/Luna/frontend/src/HOC/index.js\";\nimport React, { useEffect } from 'react';\nimport { connect } from 'react-redux';\nexport default function HOCWrapper(WrappedComponent) {\n  function AuthComponent(props) {\n    useEffect(() => {\n      redirectUser();\n    }, [props.token]);\n\n    const redirectUser = () => {\n      if (!props.token) {\n        props.history.push('/');\n      } else {\n        props.history.push('/feed/');\n      }\n    };\n\n    return /*#__PURE__*/React.createElement(WrappedComponent, Object.assign({}, props, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 16\n      }\n    }));\n  }\n\n  function mapStateToProps(state) {\n    return {\n      token: state.token\n    };\n  }\n\n  return connect(mapStateToProps)(AuthComponent);\n}\n;","map":{"version":3,"sources":["/Users/jamilessifi/Desktop/Luna/frontend/src/HOC/index.js"],"names":["React","useEffect","connect","HOCWrapper","WrappedComponent","AuthComponent","props","redirectUser","token","history","push","mapStateToProps","state"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,SAAQC,OAAR,QAAsB,aAAtB;AAEA,eAAe,SAASC,UAAT,CAAoBC,gBAApB,EAAsC;AAEjD,WAASC,aAAT,CAAuBC,KAAvB,EAA8B;AAC1BL,IAAAA,SAAS,CAAC,MAAM;AACZM,MAAAA,YAAY;AACf,KAFQ,EAEN,CAACD,KAAK,CAACE,KAAP,CAFM,CAAT;;AAIA,UAAMD,YAAY,GAAG,MAAM;AACvB,UAAK,CAACD,KAAK,CAACE,KAAZ,EAAoB;AAChBF,QAAAA,KAAK,CAACG,OAAN,CAAcC,IAAd,CAAmB,GAAnB;AACH,OAFD,MAEO;AACHJ,QAAAA,KAAK,CAACG,OAAN,CAAcC,IAAd,CAAmB,QAAnB;AACH;AACJ,KAND;;AAQA,wBAAO,oBAAC,gBAAD,oBAAsBJ,KAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAP;AACH;;AAED,WAASK,eAAT,CAAyBC,KAAzB,EAAgC;AAE5B,WAAO;AACHJ,MAAAA,KAAK,EAAEI,KAAK,CAACJ;AADV,KAAP;AAGH;;AAED,SAAON,OAAO,CAACS,eAAD,CAAP,CAAyBN,aAAzB,CAAP;AACH;AAAA","sourcesContent":["import React, {useEffect} from 'react';\nimport {connect} from 'react-redux';\n\nexport default function HOCWrapper(WrappedComponent) {\n\n    function AuthComponent(props) {\n        useEffect(() => {\n            redirectUser()\n        }, [props.token]);\n\n        const redirectUser = () => {\n            if ( !props.token ) {\n                props.history.push('/')\n            } else {\n                props.history.push('/feed/')\n            }\n        };\n\n        return <WrappedComponent {...props}/>\n    }\n\n    function mapStateToProps(state) {\n\n        return {\n            token: state.token\n        }\n    }\n\n    return connect(mapStateToProps)(AuthComponent)\n};\n"]},"metadata":{},"sourceType":"module"}