{"ast":null,"code":"import { login } from \"../types\";\nimport { BACKEND_URL } from \"../../constants.js\";\nexport const loginAction = token => ({\n  type: login,\n  payload: token\n});\nconst URL = `${BACKEND_URL}auth/token/`;\nexport const loginFunction = credentials => dispatch => {\n  const headers = new Headers({\n    'Content-Type': 'application/json'\n  });\n  const config = {\n    method: 'POST',\n    body: JSON.stringify(credentials),\n    headers\n  };\n  const apiInformation = fetch(URL, config).then(response => response.json()).then(data => {\n    dispatch(loginAction(data.access));\n    localStorage.setItem('token', data.access);\n  });\n};","map":{"version":3,"sources":["/Users/jamilessifi/Desktop/Luna/frontend/src/store/actions/loginAction.js"],"names":["login","BACKEND_URL","loginAction","token","type","payload","URL","loginFunction","credentials","dispatch","headers","Headers","config","method","body","JSON","stringify","apiInformation","fetch","then","response","json","data","access","localStorage","setItem"],"mappings":"AAAA,SAASA,KAAT,QAAsB,UAAtB;AACA,SAASC,WAAT,QAA4B,oBAA5B;AAEA,OAAO,MAAMC,WAAW,GAAGC,KAAK,KAAK;AACjCC,EAAAA,IAAI,EAAEJ,KAD2B;AAEjCK,EAAAA,OAAO,EAAEF;AAFwB,CAAL,CAAzB;AAKP,MAAMG,GAAG,GAAI,GAAEL,WAAY,aAA3B;AAEA,OAAO,MAAMM,aAAa,GAAIC,WAAD,IAAkBC,QAAD,IAAc;AAExD,QAAMC,OAAO,GAAG,IAAIC,OAAJ,CAAY;AACxB,oBAAgB;AADQ,GAAZ,CAAhB;AAIA,QAAMC,MAAM,GAAG;AACXC,IAAAA,MAAM,EAAE,MADG;AAEXC,IAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeR,WAAf,CAFK;AAGXE,IAAAA;AAHW,GAAf;AAMA,QAAMO,cAAc,GAAGC,KAAK,CAACZ,GAAD,EAAMM,MAAN,CAAL,CAClBO,IADkB,CACbC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EADC,EAElBF,IAFkB,CAEbG,IAAI,IAAI;AACVb,IAAAA,QAAQ,CAACP,WAAW,CAACoB,IAAI,CAACC,MAAN,CAAZ,CAAR;AACAC,IAAAA,YAAY,CAACC,OAAb,CAAqB,OAArB,EAA8BH,IAAI,CAACC,MAAnC;AACH,GALkB,CAAvB;AAMH,CAlBM","sourcesContent":["import { login } from \"../types\";\nimport { BACKEND_URL } from \"../../constants.js\"\n\nexport const loginAction = token => ({\n    type: login,\n    payload: token\n});\n\nconst URL = `${BACKEND_URL}auth/token/`;\n\nexport const loginFunction = (credentials) => (dispatch) => {\n\n    const headers = new Headers({\n        'Content-Type': 'application/json'\n    });\n\n    const config = {\n        method: 'POST',\n        body: JSON.stringify(credentials),\n        headers\n    };\n\n    const apiInformation = fetch(URL, config)\n        .then(response => response.json())\n        .then(data => {\n            dispatch(loginAction(data.access))\n            localStorage.setItem('token', data.access)\n        });\n};\n"]},"metadata":{},"sourceType":"module"}