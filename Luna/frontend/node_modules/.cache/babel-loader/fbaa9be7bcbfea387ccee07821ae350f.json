{"ast":null,"code":"import { combineReducers } from \"redux\";\nimport { login, logout, listBestRestaurants, getRestaurants, search, getCategories, getReviews, getUsers } from \"./types\";\nconst initialState = {\n  token: null,\n  userAuth: null,\n  error: null,\n  bestRestaurants: []\n};\n\nconst loginReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case login:\n      return {\n        token: action.payload,\n        userAuth: true\n      };\n\n    default:\n      return state;\n  }\n};\n\nconst logoutReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case logout:\n      return {\n        token: null,\n        userAuth: null,\n        error: null\n      };\n\n    default:\n      return state;\n  }\n};\n\nconst restaurantsReducer = (state = {\n  restaurants: []\n}, action) => {\n  switch (action.type) {\n    case getRestaurants:\n      return {\n        restaurants: action.payload\n      };\n\n    case search:\n      return {\n        restaurants: action.payload\n      };\n\n    case listBestRestaurants:\n      return { ...state,\n        bestRestaurants: action.payload\n      };\n\n    default:\n      return state;\n  }\n};\n\nconst categoriesReducer = (state = {\n  categories: []\n}, action) => {\n  switch (action.type) {\n    case getCategories:\n      return {\n        categories: action.payload\n      };\n\n    default:\n      return state;\n  }\n};\n\nconst reviewsReducer = (state = {\n  reviews: []\n}, action) => {\n  switch (action.type) {\n    case getReviews:\n      return {\n        reviews: action.payload\n      };\n\n    case search:\n      return {\n        reviews: action.payload\n      };\n\n    default:\n      return state;\n  }\n};\n\nconst usersReducer = (state = {\n  users: []\n}, action) => {\n  switch (action.type) {\n    case getUsers:\n      return {\n        users: action.payload\n      };\n\n    case search:\n      return {\n        users: action.payload\n      };\n\n    default:\n      return state;\n  }\n};\n\nconst allReducers = combineReducers({\n  login: loginReducer,\n  logout: logoutReducer,\n  restaurants: restaurantsReducer,\n  categories: categoriesReducer,\n  reviews: reviewsReducer,\n  users: usersReducer\n});\nexport default allReducers;","map":{"version":3,"sources":["/Users/jamilessifi/Desktop/Luna/frontend/src/store/reducer.js"],"names":["combineReducers","login","logout","listBestRestaurants","getRestaurants","search","getCategories","getReviews","getUsers","initialState","token","userAuth","error","bestRestaurants","loginReducer","state","action","type","payload","logoutReducer","restaurantsReducer","restaurants","categoriesReducer","categories","reviewsReducer","reviews","usersReducer","users","allReducers"],"mappings":"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","sourcesContent":["import { combineReducers } from \"redux\";\nimport { login, logout, listBestRestaurants, getRestaurants, search, getCategories, getReviews, getUsers } from \"./types\";\n\n\nconst initialState = {\n    token: null,\n    userAuth: null,\n    error: null,\n    bestRestaurants: []\n};\n\n\nconst loginReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case login:\n            return {\n                token: action.payload,\n                userAuth: true,\n            };\n        default:\n            return state;\n    }\n};\n\nconst logoutReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case logout:\n            return {\n                token: null,\n                userAuth: null,\n                error: null\n            };\n        default:\n            return state;\n    }\n};\n\nconst restaurantsReducer = (state = { restaurants: [] }, action) => {\n    switch (action.type) {\n        case getRestaurants:\n            return {\n                restaurants: action.payload\n            };\n        case search:\n            return {\n                restaurants: action.payload\n            };\n        case listBestRestaurants:\n            return {\n                ...state,\n                bestRestaurants: action.payload\n            }\n        default:\n            return state;\n    }\n};\n\nconst categoriesReducer = (state = { categories: [] }, action) => {\n    switch (action.type){\n        case getCategories:\n            return{\n                categories: action.payload\n            };\n        default:\n            return state;\n    }\n};\n\nconst reviewsReducer = (state = { reviews: [] }, action) => {\n    switch (action.type){\n        case getReviews:\n            return{\n                reviews: action.payload\n            };\n        case search:\n            return {\n                reviews: action.payload\n            };\n        default:\n            return state;\n    }\n};\n\nconst usersReducer = (state = { users: [] }, action) => {\n    switch (action.type){\n        case getUsers:\n            return{\n                users: action.payload\n            };\n        case search:\n            return {\n                users: action.payload\n            };\n        default:\n            return state;\n    }\n};\n\n\n\nconst allReducers = combineReducers({\n    login: loginReducer,\n    logout: logoutReducer,\n    restaurants: restaurantsReducer,\n    categories: categoriesReducer,\n    reviews: reviewsReducer,\n    users: usersReducer,\n});\n\nexport default allReducers;\n"]},"metadata":{},"sourceType":"module"}