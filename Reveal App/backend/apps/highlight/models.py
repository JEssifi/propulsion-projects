from django.db import models
from django.conf import settings

from apps.tag.models import Tag
from apps.document.models.pdf import PDF

class Highlight(models.Model):
    id_user = models.ForeignKey(
        to=settings.AUTH_USER_MODEL,
        verbose_name='user',
        related_name="fk_highlight_to_user",
        on_delete=models.CASCADE
    )
    id_pdf = models.ForeignKey(
        to=PDF,
        verbose_name="pdf",
        related_name="fk_highlight_to_pdf",
        on_delete=models.CASCADE
    )
    id_tag = models.ForeignKey(
        to=Tag,
        verbose_name="tag",
        related_name="fk_highlight_to_tag",
        blank=True,
        null= True,
        on_delete=models.CASCADE
    )
    starting_point = models.IntegerField(
        verbose_name="starting point",
    )
    ending_point = models.IntegerField(
        verbose_name="ending point",
    )
    selection = models.TextField(
        verbose_name="text highlighted"
    )
    suggested = models.BooleanField(
        verbose_name="Generated by the backend model",
        default=False
    )
    score = models.FloatField(
        verbose_name="Score of the suggested selection",
        blank=True,
        null= True,
    )
    id_parent_highlight = models.ForeignKey(
        to="self",
        verbose_name="Parent highlight",
        related_name="fk_highlight_to_highlight",
        on_delete=models.CASCADE,
        null=True,
        blank=True
    )
    accepted = models.BooleanField(
        blank=True,
        null= True,
        default=None
    )
    date_created = models.DateTimeField(
        verbose_name='created time',
        auto_now_add=True
    )
    date_updated = models.DateTimeField(
        verbose_name="updated",
        auto_now=True
    )

    class Meta:
        ordering = ['-date_updated']

    def __str__(self):
        return str(self.selection)